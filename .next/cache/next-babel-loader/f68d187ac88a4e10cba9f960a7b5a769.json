{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from 'react';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport 'twin.macro';\n\nvar CookieConsent = function CookieConsent() {\n  _s();\n\n  var router = useRouter();\n\n  var _useState = useState(false),\n      consent = _useState[0],\n      setConsent = _useState[1];\n\n  var _useState2 = useState(consent),\n      visible = _useState2[0],\n      setVisible = _useState2[1];\n\n  useEffect(function () {\n    var cookiesConsent = window.localStorage.getItem('shoutmo-cookies-consent');\n    var isInfoPage = router.pathname.includes('/info');\n\n    if (!cookiesConsent && !isInfoPage) {\n      setVisible(true);\n    }\n  }, []);\n  useEffect(function () {\n    if (consent) {\n      window.localStorage.setItem('shoutmo-cookies-consent', true);\n      setVisible(false);\n    }\n  }, [consent]);\n  var buttonAnimations = {\n    whileHover: {\n      scale: 1.1,\n      boxShadow: '0px 5px 10px rgba(0, 0, 0, 0.15)'\n    },\n    whileTap: {\n      scale: 0.9\n    }\n  };\n  var bannerAnimation = {\n    initial: {\n      y: '2rem',\n      opacity: 0\n    },\n    animate: {\n      y: 0,\n      opacity: 1,\n      transition: {\n        delay: 0.3\n      }\n    },\n    exit: {\n      opacity: 0,\n      y: '16rem'\n    }\n  };\n  return __jsx(AnimatePresence, {\n    exitBeforeEnter: true\n  }, visible && __jsx(motion.div, {\n    // tw=\"sticky bottom-0 shadow-lg w-full bg-gradient-to-r from-pink-400 to-purple-500 text-white\"\n    tw: \"sticky bottom-0 shadow-lg w-full bg-black text-white\",\n    variants: bannerAnimation,\n    initial: \"initial\",\n    animate: \"animate\",\n    exit: \"exit\"\n  }, __jsx(\"div\", {\n    tw: \"block sm:flex justify-center px-8 py-4\"\n  }, __jsx(\"div\", {\n    tw: \"self-center\\n\"\n  }, __jsx(\"p\", {\n    tw: \"text-justify text-sm\"\n  }, \"This website uses cookies to enhance the user experience. By continuing to use this site or clicking on Accept, you are consenting to our use of cookies and our\", ' ', __jsx(Link, {\n    href: \"\".concat(process.env.NEXT_PUBLIC_CLIENT_URL, \"info\") + \"/terms\",\n    passHref: true\n  }, __jsx(\"a\", {\n    tw: \"font-bold underline\"\n  }, \"privacy policy\")), \".\")), __jsx(\"div\", {\n    tw: \"mt-3 sm:mt-0 sm:ml-8 text-center\"\n  }, __jsx(motion.button, {\n    onClick: function onClick() {\n      setConsent(true);\n    },\n    whileHover: buttonAnimations.whileHover,\n    whileTap: buttonAnimations.whileTap,\n    style: {\n      backfaceVisibility: 'hidden',\n      transform: 'perspective(1px) translateZ(0)'\n    },\n    tw: \"mx-auto font-bold text-gray-100 bg-secondary px-4 py-2 rounded-full focus:outline-none\"\n  }, \"Accept\")))));\n};\n\n_s(CookieConsent, \"bkiX6lKnUD1Nmix3qESM67i2rC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = CookieConsent;\nexport default CookieConsent;\n\nvar _c;\n\n$RefreshReg$(_c, \"CookieConsent\");","map":{"version":3,"sources":["/home/binaural14/projects/personal/icare/components/CookieConsent.jsx"],"names":["useEffect","useState","Link","useRouter","AnimatePresence","motion","CookieConsent","router","consent","setConsent","visible","setVisible","cookiesConsent","window","localStorage","getItem","isInfoPage","pathname","includes","setItem","buttonAnimations","whileHover","scale","boxShadow","whileTap","bannerAnimation","initial","y","opacity","animate","transition","delay","exit","process","env","NEXT_PUBLIC_CLIENT_URL","backfaceVisibility","transform"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react'\nimport Link from 'next/link'\nimport { useRouter } from 'next/router'\nimport { AnimatePresence, motion } from 'framer-motion'\nimport 'twin.macro'\n\nconst CookieConsent = () => {\n  const router = useRouter()\n  const [consent, setConsent] = useState(false)\n  const [visible, setVisible] = useState(consent)\n\n  useEffect(() => {\n    const cookiesConsent = window.localStorage.getItem(\n      'shoutmo-cookies-consent'\n    )\n    const isInfoPage = router.pathname.includes('/info')\n    if (!cookiesConsent && !isInfoPage) {\n      setVisible(true)\n    }\n  }, [])\n\n  useEffect(() => {\n    if (consent) {\n      window.localStorage.setItem('shoutmo-cookies-consent', true)\n      setVisible(false)\n    }\n  }, [consent])\n\n  const buttonAnimations = {\n    whileHover: {\n      scale: 1.1,\n      boxShadow: '0px 5px 10px rgba(0, 0, 0, 0.15)',\n    },\n    whileTap: {\n      scale: 0.9,\n    },\n  }\n\n  const bannerAnimation = {\n    initial: {\n      y: '2rem',\n      opacity: 0,\n    },\n    animate: {\n      y: 0,\n      opacity: 1,\n      transition: { delay: 0.3 },\n    },\n    exit: {\n      opacity: 0,\n      y: '16rem',\n    },\n  }\n\n  return (\n    <AnimatePresence exitBeforeEnter>\n      {visible && (\n        <motion.div\n          // tw=\"sticky bottom-0 shadow-lg w-full bg-gradient-to-r from-pink-400 to-purple-500 text-white\"\n          tw=\"sticky bottom-0 shadow-lg w-full bg-black text-white\"\n          variants={bannerAnimation}\n          initial=\"initial\"\n          animate=\"animate\"\n          exit=\"exit\"\n        >\n          <div tw=\"block sm:flex justify-center px-8 py-4\">\n            <div\n              tw=\"self-center\n\"\n            >\n              <p tw=\"text-justify text-sm\">\n                This website uses cookies to enhance the user experience. By\n                continuing to use this site or clicking on Accept, you are\n                consenting to our use of cookies and our\n                {' '}\n                <Link\n                  href={`${process.env.NEXT_PUBLIC_CLIENT_URL}info` + `/terms`}\n                  passHref\n                >\n                  <a tw=\"font-bold underline\">privacy policy</a>\n                </Link>\n                .\n              </p>\n            </div>\n\n            <div tw=\"mt-3 sm:mt-0 sm:ml-8 text-center\">\n              <motion.button\n                onClick={() => {\n                  setConsent(true)\n                }}\n                whileHover={buttonAnimations.whileHover}\n                whileTap={buttonAnimations.whileTap}\n                style={{\n                  backfaceVisibility: 'hidden',\n                  transform: 'perspective(1px) translateZ(0)',\n                }}\n                tw=\"mx-auto font-bold text-gray-100 bg-secondary px-4 py-2 rounded-full focus:outline-none\"\n              >\n                Accept\n              </motion.button>\n            </div>\n          </div>\n        </motion.div>\n      )}\n    </AnimatePresence>\n  )\n}\n\nexport default CookieConsent\n"]},"metadata":{},"sourceType":"module"}