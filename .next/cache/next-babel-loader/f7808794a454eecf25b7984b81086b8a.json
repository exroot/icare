{"ast":null,"code":"import { useEffect } from 'react';\nimport useSWR from 'swr';\nimport redirectToRoute from '../utils/redirectTo';\nconst USER_ENDPOINT = '/auth/user/';\n\nconst useUser = ({\n  redirectTo = false,\n  redirectIfFound = false,\n  oneCall = false,\n  initialData = null\n} = {}) => {\n  const onServer = true;\n  const {\n    data: user,\n    mutate: mutateUser,\n    error\n  } = useSWR(USER_ENDPOINT, {\n    revalidateOnFocus: false,\n    revalidateOnMount: true,\n    // revalidateOnMount:\n    //     oneCall || (!onServer && !localStorage.getItem(\"access\")), // [DONT DELETE] uncomment for dev testing if needed\n    revalidateOnReconnect: false,\n    refreshWhenOffline: false,\n    refreshWhenHidden: false,\n    refreshInterval: oneCall ? 0 : 1 * 1000 * 60 * 5,\n    dedupingInterval: 1 * 1000 * 60 * 5,\n    // Relay call to USER_ENDPOINT\n    initialData\n  });\n  const isLoading = !user && !error;\n  useEffect(() => {\n    if (!redirectTo || !user) return;\n\n    if ( // If redirectTo is set, redirect if the user was not found.\n    redirectTo && !redirectIfFound && !(user === null || user === void 0 ? void 0 : user.is_logged_in) || // If redirectIfFound is also set, redirect if the user was found\n    redirectIfFound && (user === null || user === void 0 ? void 0 : user.is_logged_in)) {\n      redirectToRoute(redirectTo);\n    }\n  }, [user, error, redirectTo, redirectIfFound]);\n  return {\n    user,\n    mutateUser,\n    error,\n    isLoading\n  };\n};\n\nexport default useUser;","map":{"version":3,"sources":["/home/binaural14/projects/personal/icare/lib/useUser.js"],"names":["useEffect","useSWR","redirectToRoute","USER_ENDPOINT","useUser","redirectTo","redirectIfFound","oneCall","initialData","onServer","data","user","mutate","mutateUser","error","revalidateOnFocus","revalidateOnMount","revalidateOnReconnect","refreshWhenOffline","refreshWhenHidden","refreshInterval","dedupingInterval","isLoading","is_logged_in"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,MAAP,MAAmB,KAAnB;AACA,OAAOC,eAAP,MAA4B,qBAA5B;AAEA,MAAMC,aAAa,GAAG,aAAtB;;AAEA,MAAMC,OAAO,GAAG,CAAC;AACfC,EAAAA,UAAU,GAAG,KADE;AAEfC,EAAAA,eAAe,GAAG,KAFH;AAGfC,EAAAA,OAAO,GAAG,KAHK;AAIfC,EAAAA,WAAW,GAAG;AAJC,IAKb,EALY,KAKL;AACT,QAAMC,QAAQ,OAAd;AACA,QAAM;AAAEC,IAAAA,IAAI,EAAEC,IAAR;AAAcC,IAAAA,MAAM,EAAEC,UAAtB;AAAkCC,IAAAA;AAAlC,MAA4Cb,MAAM,CAACE,aAAD,EAAgB;AACtEY,IAAAA,iBAAiB,EAAE,KADmD;AAEtEC,IAAAA,iBAAiB,EAAE,IAFmD;AAGtE;AACA;AACAC,IAAAA,qBAAqB,EAAE,KAL+C;AAMtEC,IAAAA,kBAAkB,EAAE,KANkD;AAOtEC,IAAAA,iBAAiB,EAAE,KAPmD;AAQtEC,IAAAA,eAAe,EAAEb,OAAO,GAAG,CAAH,GAAO,IAAI,IAAJ,GAAW,EAAX,GAAgB,CARuB;AAStEc,IAAAA,gBAAgB,EAAE,IAAI,IAAJ,GAAW,EAAX,GAAgB,CAToC;AASjC;AACrCb,IAAAA;AAVsE,GAAhB,CAAxD;AAaA,QAAMc,SAAS,GAAG,CAACX,IAAD,IAAS,CAACG,KAA5B;AAEAd,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACK,UAAD,IAAe,CAACM,IAApB,EAA0B;;AAC1B,SACE;AACCN,IAAAA,UAAU,IAAI,CAACC,eAAf,IAAkC,EAACK,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEY,YAAP,CAAnC,IACA;AACCjB,IAAAA,eAAe,KAAIK,IAAJ,aAAIA,IAAJ,uBAAIA,IAAI,CAAEY,YAAV,CAJlB,EAKE;AACArB,MAAAA,eAAe,CAACG,UAAD,CAAf;AACD;AACF,GAVQ,EAUN,CAACM,IAAD,EAAOG,KAAP,EAAcT,UAAd,EAA0BC,eAA1B,CAVM,CAAT;AAYA,SAAO;AACLK,IAAAA,IADK;AAELE,IAAAA,UAFK;AAGLC,IAAAA,KAHK;AAILQ,IAAAA;AAJK,GAAP;AAMD,CAxCD;;AA0CA,eAAelB,OAAf","sourcesContent":["import { useEffect } from 'react'\nimport useSWR from 'swr'\nimport redirectToRoute from '../utils/redirectTo'\n\nconst USER_ENDPOINT = '/auth/user/'\n\nconst useUser = ({\n  redirectTo = false,\n  redirectIfFound = false,\n  oneCall = false,\n  initialData = null,\n} = {}) => {\n  const onServer = typeof window === 'undefined'\n  const { data: user, mutate: mutateUser, error } = useSWR(USER_ENDPOINT, {\n    revalidateOnFocus: false,\n    revalidateOnMount: true,\n    // revalidateOnMount:\n    //     oneCall || (!onServer && !localStorage.getItem(\"access\")), // [DONT DELETE] uncomment for dev testing if needed\n    revalidateOnReconnect: false,\n    refreshWhenOffline: false,\n    refreshWhenHidden: false,\n    refreshInterval: oneCall ? 0 : 1 * 1000 * 60 * 5,\n    dedupingInterval: 1 * 1000 * 60 * 5, // Relay call to USER_ENDPOINT\n    initialData,\n  })\n\n  const isLoading = !user && !error\n\n  useEffect(() => {\n    if (!redirectTo || !user) return\n    if (\n      // If redirectTo is set, redirect if the user was not found.\n      (redirectTo && !redirectIfFound && !user?.is_logged_in) ||\n      // If redirectIfFound is also set, redirect if the user was found\n      (redirectIfFound && user?.is_logged_in)\n    ) {\n      redirectToRoute(redirectTo)\n    }\n  }, [user, error, redirectTo, redirectIfFound])\n\n  return {\n    user,\n    mutateUser,\n    error,\n    isLoading,\n  }\n}\n\nexport default useUser\n"]},"metadata":{},"sourceType":"module"}