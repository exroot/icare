{"ast":null,"code":"import _regeneratorRuntime from \"/home/binaural14/projects/personal/icare/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _defineProperty from \"/home/binaural14/projects/personal/icare/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"/home/binaural14/projects/personal/icare/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport axios from \"axios\";\n\nvar fetcher = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(url) {\n    var token, clientInstance, _yield$clientInstance, data;\n\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            token = localStorage.getItem(\"access\");\n            clientInstance = axios.create({\n              headers: _objectSpread({\n                Accept: \"application/json\"\n              }, token ? {\n                Authorization: \"Bearer \".concat(token)\n              } : {}),\n              baseURL: process.env.NEXT_PUBLIC_API_URL\n            });\n            _context3.prev = 2;\n            clientInstance.interceptors.response.use(\n            /*#__PURE__*/\n            // RESPONSE\n            function () {\n              var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(response) {\n                var refresh, _yield$axios$post, token, config, newResponse;\n\n                return _regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        if (!(!localStorage.getItem(\"access\") && response.data.is_logged_in === false)) {\n                          _context.next = 2;\n                          break;\n                        }\n\n                        return _context.abrupt(\"return\", Promise.resolve(response));\n\n                      case 2:\n                        if (!(localStorage.getItem(\"access\") && response.data.is_logged_in === true)) {\n                          _context.next = 4;\n                          break;\n                        }\n\n                        return _context.abrupt(\"return\", Promise.resolve(response));\n\n                      case 4:\n                        // Try request again but with a new access token\n                        // wait for a new access token\n                        refresh = {\n                          refresh: localStorage.getItem(\"refresh\")\n                        };\n                        _context.next = 7;\n                        return axios.post(\"/auth/token/refresh/\", refresh, {\n                          /* Enable cookies to send the refresh token */\n                          // withCredentials: true,\n                          baseURL: process.env.NEXT_PUBLIC_API_URL\n                        });\n\n                      case 7:\n                        _yield$axios$post = _context.sent;\n                        token = _yield$axios$post.data;\n                        localStorage.setItem(\"access\", token.access); // New request with new token\n\n                        config = response.config;\n                        config.headers.Authorization = \"Bearer \".concat(localStorage.getItem(\"access\"));\n                        _context.next = 14;\n                        return axios.request(_objectSpread(_objectSpread({}, config), {}, {\n                          method: \"GET\"\n                        }));\n\n                      case 14:\n                        newResponse = _context.sent;\n                        return _context.abrupt(\"return\", Promise.resolve(newResponse));\n\n                      case 16:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              }));\n\n              return function (_x2) {\n                return _ref2.apply(this, arguments);\n              };\n            }(),\n            /*#__PURE__*/\n            // ERROR\n            function () {\n              var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(error) {\n                var _error$response;\n\n                var refresh, _yield$axios$post2, token, config, response;\n\n                return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        if (!(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) !== 401)) {\n                          _context2.next = 2;\n                          break;\n                        }\n\n                        return _context2.abrupt(\"return\", Promise.reject(error));\n\n                      case 2:\n                        if (!(error.config.url === \"/auth/token/refresh/\")) {\n                          _context2.next = 4;\n                          break;\n                        }\n\n                        return _context2.abrupt(\"return\", Promise.resolve({\n                          is_logged_in: false\n                        }));\n\n                      case 4:\n                        // Try request again but with a new access token\n                        // wait for a new access token\n                        refresh = {\n                          refresh: localStorage.getItem(\"refresh\")\n                        };\n                        _context2.next = 7;\n                        return axios.post(\"/auth/token/refresh/\", refresh, {\n                          /* Enable cookies to send the refresh token */\n                          // withCredentials: true,\n                          baseURL: process.env.NEXT_PUBLIC_API_URL\n                        });\n\n                      case 7:\n                        _yield$axios$post2 = _context2.sent;\n                        token = _yield$axios$post2.data;\n                        localStorage.setItem(\"access\", token.access); // New request with new token\n\n                        config = error.config;\n                        config.headers.Authorization = \"Bearer \".concat(localStorage.getItem(\"access\"));\n                        _context2.next = 14;\n                        return axios.request(_objectSpread(_objectSpread({}, config), {}, {\n                          method: \"GET\"\n                        }));\n\n                      case 14:\n                        response = _context2.sent;\n                        return _context2.abrupt(\"return\", Promise.resolve(response));\n\n                      case 16:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, _callee2);\n              }));\n\n              return function (_x3) {\n                return _ref3.apply(this, arguments);\n              };\n            }());\n            _context3.next = 6;\n            return clientInstance.get(url);\n\n          case 6:\n            _yield$clientInstance = _context3.sent;\n            data = _yield$clientInstance.data;\n            return _context3.abrupt(\"return\", data);\n\n          case 11:\n            _context3.prev = 11;\n            _context3.t0 = _context3[\"catch\"](2);\n            return _context3.abrupt(\"return\", Promise.resolve({\n              is_logged_in: false\n            }));\n\n          case 14:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[2, 11]]);\n  }));\n\n  return function fetcher(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default fetcher;","map":{"version":3,"sources":["/home/binaural14/projects/personal/icare/lib/fetcher.js"],"names":["axios","fetcher","url","token","localStorage","getItem","clientInstance","create","headers","Accept","Authorization","baseURL","process","env","NEXT_PUBLIC_API_URL","interceptors","response","use","data","is_logged_in","Promise","resolve","refresh","post","setItem","access","config","request","method","newResponse","error","status","reject","get"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n\nconst fetcher = async (url) => {\n  const token = localStorage.getItem(\"access\");\n  const clientInstance = axios.create({\n    headers: {\n      Accept: \"application/json\",\n      ...(token ? { Authorization: `Bearer ${token}` } : {}),\n    },\n    baseURL: process.env.NEXT_PUBLIC_API_URL,\n  });\n\n  try {\n    clientInstance.interceptors.response.use(\n      // RESPONSE\n      async (response) => {\n        if (\n          !localStorage.getItem(\"access\") &&\n          response.data.is_logged_in === false\n        ) {\n          return Promise.resolve(response);\n        }\n        if (\n          localStorage.getItem(\"access\") &&\n          response.data.is_logged_in === true\n        ) {\n          return Promise.resolve(response);\n        }\n        // Try request again but with a new access token\n        // wait for a new access token\n        const refresh = { refresh: localStorage.getItem(\"refresh\") };\n        const { data: token } = await axios.post(\n          \"/auth/token/refresh/\",\n          refresh,\n          {\n            /* Enable cookies to send the refresh token */\n            // withCredentials: true,\n            baseURL: process.env.NEXT_PUBLIC_API_URL,\n          }\n        );\n        localStorage.setItem(\"access\", token.access);\n        // New request with new token\n        const {config} = response;\n        config.headers.Authorization = `Bearer ${localStorage.getItem(\n          \"access\"\n        )}`;\n        const newResponse = await axios.request({\n          ...config,\n          method: \"GET\",\n        });\n        return Promise.resolve(newResponse);\n      },\n      // ERROR\n      async (error) => {\n        // Return any error which is not due to authentication normally\n        if (error.response?.status !== 401) {\n          return Promise.reject(error);\n        }\n        /* \n          status 401 on refresh_token endpoint => Logout user because refresh token didn't work\n          \n          Also, redirect to login page \n      */\n\n        if (error.config.url === \"/auth/token/refresh/\") {\n          return Promise.resolve({\n            is_logged_in: false,\n          });\n        }\n        // Try request again but with a new access token\n        // wait for a new access token\n        const refresh = { refresh: localStorage.getItem(\"refresh\") };\n        const { data: token } = await axios.post(\n          \"/auth/token/refresh/\",\n          refresh,\n          {\n            /* Enable cookies to send the refresh token */\n            // withCredentials: true,\n            baseURL: process.env.NEXT_PUBLIC_API_URL,\n          }\n        );\n        localStorage.setItem(\"access\", token.access);\n        // New request with new token\n        const {config} = error;\n        config.headers.Authorization = `Bearer ${localStorage.getItem(\n          \"access\"\n        )}`;\n        const response = await axios.request({\n          ...config,\n          method: \"GET\",\n        });\n        return Promise.resolve(response);\n      }\n    );\n    const { data } = await clientInstance.get(url);\n    return data;\n  } catch (err) {\n    //   Refresh token has expired or something happened\n    return Promise.resolve({\n      is_logged_in: false,\n    });\n\n    // throw err;\n  }\n};\n\nexport default fetcher;\n"]},"metadata":{},"sourceType":"module"}